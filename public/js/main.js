"use strict";function restaurantFn(){document.querySelector(".restaurant__dummy").scrollIntoView({block:"start",behavior:"smooth"})}function menuFn(){document.querySelector(".menu__dummy").scrollIntoView({block:"start",behavior:"smooth"})}function classesFn(){document.querySelector(".classes__dummy").scrollIntoView({block:"start",behavior:"smooth"})}function menuup01Fn(){document.getElementById("starters").scrollIntoView({block:"start",behavior:"smooth"})}function menuup02Fn(){document.getElementById("breakfast").scrollIntoView({block:"start",behavior:"smooth"})}function menuup03Fn(){document.getElementById("dinner").scrollIntoView({block:"start",behavior:"smooth"})}function menuup04Fn(){document.getElementById("drinks").scrollIntoView({block:"start",behavior:"smooth"})}window.addEventListener("DOMContentLoaded",function(){var w=document.querySelector(".mouse"),f=0;onwheel=function(e){window.onscroll=function(e){var t=window.scrollY,o=document.querySelector(".restaurant__dummy"),n=document.getElementById("restaurant-span"),l=document.querySelector(".menu__dummy"),s=document.getElementById("dinner"),c=document.getElementById("drinks"),u=document.querySelector(".classes"),r=document.querySelector(".classes__dummy2"),d=document.getElementById("blog"),m=o.getBoundingClientRect().top,i=n.getBoundingClientRect().bottom,a=l.getBoundingClientRect().top,y=s.getBoundingClientRect().bottom,g=c.getBoundingClientRect().bottom,p=u.getBoundingClientRect().top,_=r.getBoundingClientRect().top,v=d.getBoundingClientRect().top;if(f<t){var S=document.getElementById("downmenu");S.classList.remove("hide"),S.classList.add("show"),w.style.opacity=0,clearInterval(q,1500),i<=0&&document.querySelector(".logo").classList.add("logo__onleft"),m<=0&&(document.querySelector(".menu__img").style.display="block"),a<=0&&(document.querySelector(".menuup").classList.add("menuup__sticky"),document.querySelector(".menu__wrapper").style.paddingTop="8.4rem",document.getElementById("menu").classList.add("title-fixed")),y<=0&&(document.getElementById("menu").classList.remove("title-fixed"),document.getElementById("menu").style.top="249rem"),g<=0&&(document.querySelector(".menuup").classList.remove("menuup__sticky"),document.querySelector(".menu__wrapper").style.paddingTop=0,document.querySelector(".logo").classList.remove("logo__onleft")),p<=0&&(document.querySelector(".menu__img").style.display="none",document.querySelector(".shop__img").style.display="block"),_<=0&&(document.querySelector(".logo").classList.add("logo__onleft"),document.querySelector(".blog__img").style.display="block"),v<=800&&document.querySelector(".shop__img").classList.add("hide")}else t<f&&(800<=v&&document.querySelector(".shop__img").classList.remove("hide"),0<=_&&(document.querySelector(".logo").classList.remove("logo__onleft"),document.querySelector(".blog__img").style.display="none"),0<=p&&(document.querySelector(".menu__img").style.display="block",document.querySelector(".shop__img").style.display="none"),0<=g&&(document.querySelector(".menuup").classList.add("menuup__sticky"),document.querySelector(".menu__wrapper").style.paddingTop="8.4rem",document.querySelector(".logo").classList.add("logo__onleft")),0<=y&&(document.getElementById("menu").classList.add("title-fixed"),document.getElementById("menu").style.top="37rem"),0<=a&&(document.querySelector(".menuup").classList.remove("menuup__sticky"),document.querySelector(".menu__wrapper").style.paddingTop=0,document.getElementById("menu").classList.remove("title-fixed")),0<=m&&(document.querySelector(".menu__img").style.display="none"),0<=i&&document.querySelector(".logo").classList.remove("logo__onleft"));f=t<=0?0:t}()},scroll=function(t){function e(e){return t.apply(this,arguments)}return e.toString=function(){return t.toString()},e}(function(e){onwheel(e),window.removeEventListener("scroll",scroll)}),window.addEventListener("scroll",scroll,!0);var e=document.getElementById("clocks"),t=e.childNodes,o=e||t;o.addEventListener("mouseover",function(){var e=document.getElementById("times");e.classList.remove("hidden"),e.classList.add("active")}),o.addEventListener("mouseout",function(){var e=document.getElementById("times");e.classList.remove("active"),e.classList.add("hidden")});new Swiper(".myswiper",{autoplay:{delay:2500},speed:1e3,loop:!0,freeMode:!0,slidesPerView:"auto",centeredSlides:!0,spaceBetween:0,grabCursor:!0}),new Swiper(".myswiper2",{autoplay:{delay:2500},speed:1e3,loop:!0,freeMode:!0,slidesPerView:"auto",centeredSlides:!0,spaceBetween:0,grabCursor:!0});var q=setInterval(function(){w.style.opacity=1,setTimeout(function(){w.classList.add("mouse__active")},750),w.classList.remove("mouse__active")},1500)});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,